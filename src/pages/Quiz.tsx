import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import SkinAnalysis, { type SkinMetrics, type SkinZone } from "../components/SkinAnalysis";

/** –•—Ä–∞–Ω–∏–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –≤ –æ–¥–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ (–∏ –≤ localStorage) */
export type Answers = {
  // 1. –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  age: "under18"|"18-24"|"25-34"|"35-44"|"45+"|null;
  gender: "female"|"male"|null;

  // 2. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–∂–∏
  skin_concerns: string[];           // –∞–∫–Ω–µ, –∂–∏—Ä–Ω–æ—Å—Ç—å, —Å—É—Ö–æ—Å—Ç—å, –ø–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ç.–¥.
  after_cleansing: "comfortable"|"tight"|null;
  daily_behavior: "oily_2-3h"|"oily_evening"|"stays_matte"|null;
  sensitivity_level: "high"|"medium"|"low"|null;
  seasonal_changes: "summer_oily"|"winter_dry"|"same_year_round"|null;

  // 3. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–º–Ω–µ–∑
  medical_diagnoses: string[];       // –∞–∫–Ω–µ, —Ä–æ–∑–∞—Ü–µ–∞, —Å–µ–±–æ—Ä–µ—è –∏ —Ç.–¥.
  pregnancy_status: "pregnant"|"breastfeeding"|"none"|null;
  allergies: string[];               // –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –∫–æ—Å–º–µ—Ç–∏–∫–∞, –ø—Ä–æ–¥—É–∫—Ç—ã
  medications: string[];             // –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤—ã, –≤–∏—Ç–∞–º–∏–Ω—ã, –ª–µ–∫–∞—Ä—Å—Ç–≤–∞

  // 4. –û–ø—ã—Ç —É—Ö–æ–¥–∞
  retinol_experience: "yes"|"no"|null;
  retinol_reaction: "good"|"irritation"|"dont_know"|null;
  prescription_creams: string[];     // –∞–∑–µ–ª–∞–∏–Ω–æ–≤–∞—è, –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ
  oral_medications: string[];       // –∏–∑–æ—Ç—Ä–µ—Ç–∏–Ω–æ–∏–Ω, –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏, –≥–æ—Ä–º–æ–Ω—ã

  // 5. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏ (–±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –∏–∑ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤)
  current_skin_state?: string;

  // 6. –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
  makeup_frequency: "daily"|"sometimes"|"rarely"|null;
  spf_use: "daily"|"sometimes"|"never"|null;
  sun_exposure: "0-1h"|"1-3h"|"3h+"|"dont_know"|null;
  lifestyle_habits: string[];       // –∫—É—Ä–µ–Ω–∏–µ, –∞–ª–∫–æ–≥–æ–ª—å, –Ω–µ–¥–æ—Å—ã–ø, —Å—Ç—Ä–µ—Å—Å

  // 7. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —É—Ö–æ–¥–µ
  care_type: "standard"|"natural"|"medical"|"dont_know"|null;
  avoid_ingredients: string[];      // –ø–∞—Ä–∞–±–µ–Ω—ã, –æ—Ç–¥—É—à–∫–∏, —Å—É–ª—å—Ñ–∞—Ç—ã –∏ —Ç.–¥.
  routine_steps: "minimal"|"medium"|"maximum"|"dont_know"|null;
  budget: "light"|"affordable"|"high_end"|"elite"|null;

  // –§–æ—Ç–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  photo_data_url: string|null;       // data: URL –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  photo_analysis: string|null;       // –∫—Ä–∞—Ç–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
  photo_metrics: SkinMetrics|null;   // –¥–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∫–æ–∂–∏
  photo_zones: SkinZone[]|null;      // –∑–æ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞
  photo_scans: { ts:number; preview:string; analysis:string; metrics?:SkinMetrics; zones?:SkinZone[] }[]; // –∞—Ä—Ö–∏–≤

  // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–æ–π (–≤—Ä–µ–º–µ–Ω–Ω–æ)
  goals: string[];
  skin_type: "dry"|"normal"|"combo"|"oily"|null;
  sensitivity: boolean|null;
  cleansing_pref: "gel"|"milk"|"oil"|null;
  pregnancy: boolean|null;
  actives_ok: string[];
  actives_no: string[];
};

const DEFAULT_ANS: Answers = {
  // 1. –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  age: null,
  gender: null,

  // 2. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–∂–∏
  skin_concerns: [],
  after_cleansing: null,
  daily_behavior: null,
  sensitivity_level: null,
  seasonal_changes: null,

  // 3. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–º–Ω–µ–∑
  medical_diagnoses: [],
  pregnancy_status: null,
  allergies: [],
  medications: [],

  // 4. –û–ø—ã—Ç —É—Ö–æ–¥–∞
  retinol_experience: null,
  retinol_reaction: null,
  prescription_creams: [],
  oral_medications: [],

  // 6. –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
  makeup_frequency: null,
  spf_use: null,
  sun_exposure: null,
  lifestyle_habits: [],

  // 7. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —É—Ö–æ–¥–µ
  care_type: null,
  avoid_ingredients: [],
  routine_steps: null,
  budget: null,

  // –§–æ—Ç–æ
  photo_data_url: null,
  photo_analysis: null,
  photo_metrics: null,
  photo_zones: null,
  photo_scans: [],

  // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–æ–π
  goals: [],
  skin_type: null,
  sensitivity: null,
  cleansing_pref: null,
  pregnancy: null,
  actives_ok: [],
  actives_no: [],
};

const save = (a: Answers) => localStorage.setItem("skinplan_answers", JSON.stringify(a));
const load = (): Answers => {
  try { const raw = localStorage.getItem("skinplan_answers"); return raw ? { ...DEFAULT_ANS, ...JSON.parse(raw) } : DEFAULT_ANS; }
  catch { return DEFAULT_ANS; }
};

/* ----------- –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–∏—Ä–ø–∏—á–∏–∫–∏ UI ----------- */
const Pill = ({active, children, onClick}:{active?:boolean;children:React.ReactNode;onClick?:()=>void}) => (
  <button onClick={onClick}
    className={`inline-flex items-center px-3 py-1.5 mr-2 mb-2 rounded-full border text-sm
      ${active ? "bg-black text-white border-black" : "bg-white/60 hover:bg-white/80"}`}>
    {children}
  </button>
);

function Multi({label, options, value, onChange, limit}:{label:string; options:{key:string;label:string}[]; value:string[]; onChange:(v:string[])=>void; limit?:number}) {
  const toggle = (k:string) => {
    const next = value.includes(k) ? value.filter(x=>x!==k) : [...value, k];
    if (limit && next.length>limit) return;
    onChange(next);
  };
  return (
    <Block title={label}>
      <div className="flex flex-wrap">{options.map(o=>(
        <Pill key={o.key} active={value.includes(o.key)} onClick={()=>toggle(o.key)}>{o.label}</Pill>
      ))}</div>
    </Block>
  );
}
function Single({label, options, value, onChange}:{label:string; options:{key:string;label:string}[]; value:string|null; onChange:(v:any)=>void}) {
  return (
    <Block title={label}>
      <div className="flex flex-wrap">{options.map(o=>(
        <Pill key={o.key} active={value===o.key} onClick={()=>onChange(o.key)}>{o.label}</Pill>
      ))}</div>
    </Block>
  );
}
function Block({title, children}:{title:string; children:React.ReactNode}) {
  return (
    <div className="bg-white/70 border border-white/60 rounded-3xl p-6 mb-5 backdrop-blur-xl">
      <h3 className="text-lg font-bold mb-2">{title}</h3>
      {children}
    </div>
  );
}

/* ----------- –®–∞–≥: –§–æ—Ç–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ----------- */
function PhotoStep({a, set}:{a:Answers; set:(p:Partial<Answers>)=>void}) {
  const [error, setError] = useState<string|null>(null);

  const onFile = async (file: File) => {
    setError(null);
    if (!file) return;

    const allowed = ["image/jpeg","image/png","image/webp"];
    if (!allowed.includes(file.type)) {
      setError("–§–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ó–∞–≥—Ä—É–∑–∏—Ç–µ JPEG/PNG/WebP.");
      return;
    }
    const maxBytes = 5 * 1024 * 1024; // 5MB
    if (file.size > maxBytes) {
      setError("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 5MB.");
      return;
    }

    const reader = new FileReader();
    reader.onload = () => {
      const dataUrl = String(reader.result || "");
      set({ photo_data_url: dataUrl, photo_analysis: null, photo_metrics: null, photo_zones: null });
    };
    reader.readAsDataURL(file);
  };

  const onAnalysisComplete = (metrics: SkinMetrics, zones: SkinZone[], analysis: string) => {
    set({ 
      photo_analysis: analysis,
      photo_metrics: metrics,
      photo_zones: zones
    });
    
    // –ü–∏—à–µ–º –≤ –∞—Ä—Ö–∏–≤ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const entry = { 
      ts: Date.now(), 
      preview: a.photo_data_url!, 
      analysis,
      metrics,
      zones
    };
    set({ photo_scans: [...(a.photo_scans||[]), entry] });
  };

  const clearPhoto = () => {
    set({
      photo_data_url: null, 
      photo_analysis: null,
      photo_metrics: null,
      photo_zones: null
    });
  };

  return (
    <Block title="AI-–∞–Ω–∞–ª–∏–∑ –∫–æ–∂–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)">
      <p className="text-sm text-zinc-600 mb-3">
        –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –±–µ–∑ –º–∞–∫–∏—è–∂–∞ –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏. 
        –ù–∞—à –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏ –∏ –≤—ã–¥–µ–ª–∏—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–æ–Ω—ã.
      </p>
      
      {!a.photo_data_url && (
        <label className="inline-flex items-center px-4 py-2 rounded-full border bg-indigo-50 text-indigo-700 hover:bg-indigo-100 cursor-pointer transition">
          <input
            type="file"
            accept="image/jpeg,image/png,image/webp"
            className="hidden"
            onChange={(e)=>{
              const f = e.target.files?.[0];
              if (f) onFile(f);
            }}
          />
          üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        </label>
      )}
      
      {error && (
        <div role="alert" className="mt-3 text-sm text-rose-700 bg-rose-50 border border-rose-200 rounded-xl p-3">
          {error}
        </div>
      )}

      {a.photo_data_url && (
        <div className="mt-4">
          <SkinAnalysis 
            imageUrl={a.photo_data_url}
            onAnalysisComplete={onAnalysisComplete}
          />
          
          {a.photo_analysis && (
            <div className="mt-4 p-4 bg-blue-50 rounded-xl">
              <h4 className="font-bold text-blue-900 mb-2">üîç –†–µ–∑—É–ª—å—Ç–∞—Ç AI-–∞–Ω–∞–ª–∏–∑–∞:</h4>
              <p className="text-sm text-blue-800">{a.photo_analysis}</p>
            </div>
          )}
          
          <div className="mt-4 flex gap-3">
            <button 
              className="text-sm text-zinc-600 underline hover:text-zinc-800 transition" 
              onClick={clearPhoto}
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ
            </button>
            <button 
              className="text-sm text-indigo-600 underline hover:text-indigo-800 transition"
              onClick={() => {
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/jpeg,image/png,image/webp';
                input.onchange = (e) => {
                  const file = (e.target as HTMLInputElement).files?.[0];
                  if (file) onFile(file);
                };
                input.click();
              }}
            >
              üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ
            </button>
          </div>
        </div>
      )}

      {a.photo_scans.length>0 && (
        <div className="mt-6">
          <div className="font-semibold mb-3">üìä –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤</div>
          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
            {a.photo_scans.slice().reverse().map((scan, idx)=> (
              <div key={idx} className="p-3 rounded-xl border bg-white/60 hover:bg-white/80 transition">
                <img src={scan.preview} alt="–ê–Ω–∞–ª–∏–∑" className="w-full h-32 object-cover rounded-lg mb-2" />
                <div className="text-xs text-zinc-600 mb-2">
                  üìÖ {new Date(scan.ts).toLocaleDateString()} –≤ {new Date(scan.ts).toLocaleTimeString()}
                </div>
                {scan.metrics && (
                  <div className="text-xs space-y-1">
                    <div className="flex justify-between">
                      <span>–ê–∫–Ω–µ:</span>
                      <span className={`font-medium ${scan.metrics.acne > 50 ? 'text-red-600' : 'text-green-600'}`}>
                        {scan.metrics.acne}/100
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>–ñ–∏—Ä–Ω–æ—Å—Ç—å:</span>
                      <span className={`font-medium ${scan.metrics.oiliness > 60 ? 'text-red-600' : 'text-green-600'}`}>
                        {scan.metrics.oiliness}/100
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>–£–≤–ª–∞–∂–Ω–µ–Ω–Ω–æ—Å—Ç—å:</span>
                      <span className={`font-medium ${scan.metrics.hydration < 40 ? 'text-red-600' : 'text-green-600'}`}>
                        {scan.metrics.hydration}/100
                      </span>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      )}
    </Block>
  );
}

/* ----------- –ê–Ω–∫–µ—Ç–∞ —Å —à–∞–≥–∞–º–∏ –∏ –∏–Ω—Å–∞–π—Ç–∞–º–∏ ----------- */
type Step =
 | { type:"q"; id:string; render:(a:Answers, set:(p:Partial<Answers>)=>void)=>React.ReactNode }
 | { type:"insight"; id:string; render:(a:Answers)=>React.ReactNode }
 | { type:"done" };

const steps: Step[] = [
  // 1. –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  { type:"q", id:"age", render:(a,set)=>(
    <Single label="–í–æ–∑—Ä–∞—Å—Ç"
      options={[
        {key:"under18",label:"–î–æ 18 –ª–µ—Ç"},
        {key:"18-24",label:"18‚Äì24"},
        {key:"25-34",label:"25‚Äì34"},
        {key:"35-44",label:"35‚Äì44"},
        {key:"45+",label:"45+"}
      ]}
      value={a.age} onChange={(v)=>set({age:v})}/>
  )},
  { type:"q", id:"gender", render:(a,set)=>(
    <Single label="–ü–æ–ª"
      options={[
        {key:"female",label:"–ñ–µ–Ω—Å–∫–∏–π"},
        {key:"male",label:"–ú—É–∂—Å–∫–æ–π"}
      ]}
      value={a.gender} onChange={(v)=>set({gender:v})}/>
  )},

  // 2. –£–∑–Ω–∞–π—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –∫–æ–∂–∏
  { type:"q", id:"skin_concerns", render:(a,set)=>(
    <Multi label="–ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç –≤ –∫–æ–∂–µ —Å–µ–π—á–∞—Å? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)"
      options={[
        {key:"acne",label:"–ê–∫–Ω–µ / –≤—ã—Å—ã–ø–∞–Ω–∏—è"},
        {key:"oily_shine",label:"–ñ–∏—Ä–Ω–æ—Å—Ç—å –∏ –±–ª–µ—Å–∫ –∫–æ–∂–∏"},
        {key:"dryness",label:"–°—É—Ö–æ—Å—Ç—å –∏ —Å—Ç—è–Ω—É—Ç–æ—Å—Ç—å"},
        {key:"uneven_tone",label:"–ù–µ—Ä–æ–≤–Ω—ã–π —Ç–æ–Ω / –ø–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—è"},
        {key:"wrinkles",label:"–ú–æ—Ä—â–∏–Ω—ã, –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"},
        {key:"redness",label:"–ö—Ä–∞—Å–Ω–æ—Ç–∞, —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ, —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"},
        {key:"pores",label:"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ—Ä—ã"},
        {key:"under_eyes",label:"–ü—Ä–æ–±–ª–µ–º—ã –≤ –∑–æ–Ω–µ –ø–æ–¥ –≥–ª–∞–∑–∞–º–∏ (–æ—Ç—ë–∫–∏, –∫—Ä—É–≥–∏, –º–æ—Ä—â–∏–Ω—ã)"},
        {key:"satisfied",label:"–í —Ü–µ–ª–æ–º –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, —Ö–æ—á—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π —É—Ö–æ–¥"}
      ]}
      value={a.skin_concerns} onChange={(v)=>set({skin_concerns:v})}/>
  )},
  { type:"q", id:"after_cleansing", render:(a,set)=>(
    <Single label="–ö–∞–∫–∏–µ –æ—â—É—â–µ–Ω–∏—è —É –≤–∞—Å –ø–æ—Å–ª–µ —É–º—ã–≤–∞–Ω–∏—è?"
      options={[
        {key:"comfortable",label:"–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ"},
        {key:"tight",label:"–°—Ç—è–Ω—É—Ç–æ—Å—Ç—å –∏ —Å—É—Ö–æ—Å—Ç—å"}
      ]}
      value={a.after_cleansing} onChange={(v)=>set({after_cleansing:v})}/>
  )},
  { type:"q", id:"daily_behavior", render:(a,set)=>(
    <Single label="–ö–∞–∫ –≤–µ–¥—ë—Ç —Å–µ–±—è –∫–æ–∂–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è?"
      options={[
        {key:"oily_2-3h",label:"–ñ–∏—Ä–Ω—ã–π –±–ª–µ—Å–∫ —á–µ—Ä–µ–∑ 2‚Äì3 —á–∞—Å–∞ –ø–æ—Å–ª–µ —É–º—ã–≤–∞–Ω–∏—è"},
        {key:"oily_evening",label:"–ñ–∏—Ä–Ω—ã–π –±–ª–µ—Å–∫ –∫ –≤–µ—á–µ—Ä—É"},
        {key:"stays_matte",label:"–ö–æ–∂–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –º–∞—Ç–æ–≤–æ–π"}
      ]}
      value={a.daily_behavior} onChange={(v)=>set({daily_behavior:v})}/>
  )},
  { type:"q", id:"sensitivity_level", render:(a,set)=>(
    <Single label="–ù–∞—Å–∫–æ–ª—å–∫–æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∫–æ–∂–∞?"
      options={[
        {key:"high",label:"–í—ã—Å–æ–∫–∞—è"},
        {key:"medium",label:"–°—Ä–µ–¥–Ω—è—è"},
        {key:"low",label:"–ù–∏–∑–∫–∞—è"}
      ]}
      value={a.sensitivity_level} onChange={(v)=>set({sensitivity_level:v})}/>
  )},
  { type:"q", id:"seasonal_changes", render:(a,set)=>(
    <Single label="–ú–µ–Ω—è–µ—Ç—Å—è –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–∑–æ–Ω–∞?"
      options={[
        {key:"summer_oily",label:"–õ–µ—Ç–æ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∂–∏—Ä–Ω–µ–µ"},
        {key:"winter_dry",label:"–ó–∏–º–æ–π —Å—É—à–µ"},
        {key:"same_year_round",label:"–ö—Ä—É–≥–ª—ã–π –≥–æ–¥ –æ–¥–∏–Ω–∞–∫–æ–≤–æ"}
      ]}
      value={a.seasonal_changes} onChange={(v)=>set({seasonal_changes:v})}/>
  )},

  // 3. –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–º–Ω–µ–∑
  { type:"q", id:"medical_diagnoses", render:(a,set)=>(
    <Multi label="–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–∏–∞–≥–Ω–æ–∑—ã, –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤—Ä–∞—á–æ–º?"
      options={[
        {key:"acne",label:"–ê–∫–Ω–µ"},
        {key:"rosacea",label:"–†–æ–∑–∞—Ü–µ–∞"},
        {key:"seborrheic_dermatitis",label:"–°–µ–±–æ—Ä–µ–π–Ω—ã–π –¥–µ—Ä–º–∞—Ç–∏—Ç"},
        {key:"atopic_dermatitis",label:"–ê—Ç–æ–ø–∏—á–µ—Å–∫–∏–π –¥–µ—Ä–º–∞—Ç–∏—Ç / —Å—É—Ö–∞—è –∫–æ–∂–∞"},
        {key:"pigmentation",label:"–ü–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—è (–º–µ–ª–∞–∑–º–∞)"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.medical_diagnoses} onChange={(v)=>set({medical_diagnoses:v})}/>
  )},
  { type:"q", id:"pregnancy_status", render:(a,set)=>(
    <Single label="–í—ã –±–µ—Ä–µ–º–µ–Ω–Ω—ã/ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –≥—Ä—É–¥–Ω–æ–º –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–∏?"
      options={[
        {key:"pregnant",label:"–î–∞, –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å"},
        {key:"breastfeeding",label:"–î–∞, –≥—Ä—É–¥–Ω–æ–µ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–µ"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.pregnancy_status} onChange={(v)=>set({pregnancy_status:v})}/>
  )},
  { type:"q", id:"allergies", render:(a,set)=>(
    <Multi label="–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–ª–ª–µ—Ä–≥–∏–∏?"
      options={[
        {key:"medications",label:"–î–∞, –Ω–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞"},
        {key:"cosmetics",label:"–î–∞, –Ω–∞ –∫–æ—Å–º–µ—Ç–∏–∫—É"},
        {key:"food",label:"–î–∞, –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.allergies} onChange={(v)=>set({allergies:v})}/>
  )},
  { type:"q", id:"medications", render:(a,set)=>(
    <Multi label="–ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –≤—ã –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏–ª–∏ –¥–æ–±–∞–≤–∫–∏?"
      options={[
        {key:"contraceptives",label:"–ö–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤—ã"},
        {key:"vitamins",label:"–í–∏—Ç–∞–º–∏–Ω—ã –∏ –ë–ê–î—ã"},
        {key:"chronic_meds",label:"–õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –ø–æ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–º –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.medications} onChange={(v)=>set({medications:v})}/>
  )},

  // 4. –û–ø—ã—Ç —É—Ö–æ–¥–∞ –∏ —Ä–µ–∞–∫—Ü–∏—è –∫–æ–∂–∏
  { type:"q", id:"retinol_experience", render:(a,set)=>(
    <Single label="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ª–∏ –≤—ã —Ä–µ—Ç–∏–Ω–æ–ª –∏–ª–∏ —Ä–µ—Ç–∏–Ω–æ–∏–¥—ã (—Ç—Ä–µ—Ç–∏–Ω–æ–∏–Ω, –∞–¥–∞–ø–∞–ª–µ–Ω –∏ –¥—Ä.)?"
      options={[
        {key:"yes",label:"–î–∞"},
        {key:"no",label:"–ù–µ—Ç"}
      ]}
      value={a.retinol_experience} onChange={(v)=>set({retinol_experience:v})}/>
  )},
  {type:"q", id:"retinol_reaction", render:(a,set)=>(
    a.retinol_experience === "yes" ? (
      <Single label="–ï—Å–ª–∏ –¥–∞, –∫–∞–∫ –∫–æ–∂–∞ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∞?"
        options={[
          {key:"good",label:"–•–æ—Ä–æ—à–æ –ø–µ—Ä–µ–Ω–æ—Å–∏–ª–∞"},
          {key:"irritation",label:"–ü–æ—è–≤–ª—è–ª–æ—Å—å —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ / —Å—É—Ö–æ—Å—Ç—å"},
          {key:"dont_know",label:"–ù–µ –∑–Ω–∞—é"}
        ]}
        value={a.retinol_reaction} onChange={(v)=>set({retinol_reaction:v})}/>
    ) : null
  )},
  { type:"q", id:"prescription_creams", render:(a,set)=>(
    <Multi label="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ª–∏ –≤—ã —Ä–µ—Ü–µ–ø—Ç—É—Ä–Ω—ã–µ –∫—Ä–µ–º—ã/–≥–µ–ª–∏ –¥–ª—è –∫–æ–∂–∏?"
      options={[
        {key:"azelaic_acid",label:"–ê–∑–µ–ª–∞–∏–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞"},
        {key:"antibacterial",label:"–ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –∫—Ä–µ–º—ã (–∫–ª–∏–Ω–¥–∞–º–∏—Ü–∏–Ω, –º–µ—Ç—Ä–æ–Ω–∏–¥–∞–∑–æ–ª)"},
        {key:"other",label:"–î—Ä—É–≥–∏–µ"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.prescription_creams} onChange={(v)=>set({prescription_creams:v})}/>
  )},
  { type:"q", id:"oral_medications", render:(a,set)=>(
    <Multi label="–ü—Ä–∏–Ω–∏–º–∞–ª–∏ –ª–∏ –≤—ã –≤–Ω—É—Ç—Ä—å –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –¥–ª—è –ª–µ—á–µ–Ω–∏—è –∫–æ–∂–∏?"
      options={[
        {key:"isotretinoin",label:"–ò–∑–æ—Ç—Ä–µ—Ç–∏–Ω–æ–∏–Ω (–ê–∫–∫—É—Ç–∞–Ω)"},
        {key:"antibiotics",label:"–ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏ (–¥–æ–∫—Å–∏—Ü–∏–∫–ª–∏–Ω, –º–∏–Ω–æ—Ü–∏–∫–ª–∏–Ω)"},
        {key:"hormones",label:"–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã (—Å–ø–∏—Ä–æ–Ω–æ–ª–∞–∫—Ç–æ–Ω, –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤—ã)"},
        {key:"none",label:"–ù–µ—Ç"}
      ]}
      value={a.oral_medications} onChange={(v)=>set({oral_medications:v})}/>
  )},

  // –ò–Ω—Å–∞–π—Ç –ø–æ—Å–ª–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —á–∞—Å—Ç–∏
  { type:"insight", id:"medical_insight", render:(a)=>(
    <Block title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞">
      <ul className="list-disc pl-5 text-zinc-700 space-y-1">
        {a.medical_diagnoses.includes("acne") && <li>–î–∏–∞–≥–Ω–æ–∑ –∞–∫–Ω–µ ‚Äî —É—á—Ç—ë–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–æ–∂–∏.</li>}
        {a.medical_diagnoses.includes("rosacea") && <li>–†–æ–∑–∞—Ü–µ–∞ —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ–≥–æ —É—Ö–æ–¥–∞ ‚Äî –∏—Å–∫–ª—é—á–∏–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤—ã.</li>}
        {a.pregnancy_status !== "none" && <li>–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å/–ì–í ‚Äî –∏—Å–∫–ª—é—á–∏–º —Ä–µ—Ç–∏–Ω–æ–∏–¥—ã –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–∏—Å–ª–æ—Ç—ã.</li>}
        {a.oral_medications.includes("isotretinoin") && <li>–ò–∑–æ—Ç—Ä–µ—Ç–∏–Ω–æ–∏–Ω ‚Äî –º–∏–Ω–∏–º—É–º –∞–∫—Ç–∏–≤–æ–≤, –º–∞–∫—Å–∏–º—É–º —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è –∏ –∑–∞—â–∏—Ç—ã.</li>}
        {a.retinol_experience === "yes" && a.retinol_reaction === "good" && <li>–•–æ—Ä–æ—à–∞—è –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å —Ä–µ—Ç–∏–Ω–æ–∏–¥–æ–≤ ‚Äî –º–æ–∂–µ–º –≤–∫–ª—é—á–∏—Ç—å –≤ –ø–ª–∞–Ω.</li>}
        {a.sensitivity_level === "high" && <li>–í—ã—Å–æ–∫–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî –Ω–∞—á–Ω—ë–º —Å –º—è–≥–∫–∏—Ö —Ñ–æ—Ä–º—É–ª –∏ –Ω–∏–∑–∫–∏—Ö –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–π.</li>}
      </ul>
    </Block>
  )},

  // 6. –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –∏ –ø—Ä–∏–≤—ã—á–∫–∏
  { type:"q", id:"makeup_frequency", render:(a,set)=>(
    <Single label="–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∫–æ—Å–º–µ—Ç–∏–∫—É?"
      options={[
        {key:"daily",label:"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ"},
        {key:"sometimes",label:"–ò–Ω–æ–≥–¥–∞"},
        {key:"rarely",label:"–ü–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞"}
      ]}
      value={a.makeup_frequency} onChange={(v)=>set({makeup_frequency:v})}/>
  )},
  { type:"q", id:"spf_use", render:(a,set)=>(
    <Single label="–ö–∞–∫ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º?"
      options={[
        {key:"daily",label:"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å"},
        {key:"sometimes",label:"–ò–Ω–æ–≥–¥–∞"},
        {key:"never",label:"–ù–∏–∫–æ–≥–¥–∞"}
      ]}
      value={a.spf_use} onChange={(v)=>set({spf_use:v})}/>
  )},
  { type:"q", id:"sun_exposure", render:(a,set)=>(
    <Single label="–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–æ–ª–Ω—Ü–µ?"
      options={[
        {key:"0-1h",label:"0‚Äì1 —á–∞—Å –≤ –¥–µ–Ω—å"},
        {key:"1-3h",label:"1‚Äì3 —á–∞—Å–∞ –≤ –¥–µ–Ω—å"},
        {key:"3h+",label:"–ë–æ–ª–µ–µ 3 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å"},
        {key:"dont_know",label:"–ù–µ –∑–Ω–∞—é"}
      ]}
      value={a.sun_exposure} onChange={(v)=>set({sun_exposure:v})}/>
  )},
  { type:"q", id:"lifestyle_habits", render:(a,set)=>(
    <Multi label="–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ):"
      options={[
        {key:"smoking",label:"–ö—É—Ä—é"},
        {key:"alcohol",label:"–£–ø–æ—Ç—Ä–µ–±–ª—è—é –∞–ª–∫–æ–≥–æ–ª—å"},
        {key:"lack_sleep",label:"–ß–∞—Å—Ç–æ –Ω–µ –≤—ã—Å—ã–ø–∞—é—Å—å"},
        {key:"stress",label:"–ò—Å–ø—ã—Ç—ã–≤–∞—é —Å—Ç—Ä–µ—Å—Å"},
        {key:"all_good",label:"–í—Å—ë –≤ –Ω–æ—Ä–º–µ"}
      ]}
      value={a.lifestyle_habits} onChange={(v)=>set({lifestyle_habits:v})}/>
  )},

  // 7. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —É—Ö–æ–¥–µ
  { type:"q", id:"care_type", render:(a,set)=>(
    <Single label="–ö–∞–∫–æ–π —Ç–∏–ø —É—Ö–æ–¥–∞ –≤–∞–º –±–ª–∏–∂–µ?"
      options={[
        {key:"standard",label:"–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤"},
        {key:"natural",label:"–¢–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ / –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ"},
        {key:"medical",label:"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏ –∞–ø—Ç–µ—á–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞"},
        {key:"dont_know",label:"–ù–µ –∑–Ω–∞—é, —Ö–æ—á—É, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏"}
      ]}
      value={a.care_type} onChange={(v)=>set({care_type:v})}/>
  )},
  { type:"q", id:"avoid_ingredients", render:(a,set)=>(
    <Multi label="–ö–∞–∫–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–±–µ–≥–∞—Ç—å?"
      options={[
        {key:"parabens",label:"–ü–∞—Ä–∞–±–µ–Ω—ã"},
        {key:"fragrances",label:"–û—Ç–¥—É—à–∫–∏"},
        {key:"sulfates",label:"–°—É–ª—å—Ñ–∞—Ç—ã (SLS/SLES)"},
        {key:"phthalates",label:"–§—Ç–∞–ª–∞—Ç—ã"},
        {key:"formaldehyde",label:"–§–æ—Ä–º–∞–ª—å–¥–µ–≥–∏–¥"},
        {key:"retinol_pregnancy",label:"–†–µ—Ç–∏–Ω–æ–ª (–≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏)"},
        {key:"dont_know",label:"–ù–µ –∑–Ω–∞—é"}
      ]}
      value={a.avoid_ingredients} onChange={(v)=>set({avoid_ingredients:v})}/>
  )},
  { type:"q", id:"routine_steps", render:(a,set)=>(
    <Single label="–°–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ –≤ —É—Ö–æ–¥–µ –¥–ª—è –≤–∞—Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ?"
      options={[
        {key:"minimal",label:"–ú–∏–Ω–∏–º—É–º (1‚Äì3 —à–∞–≥–∞)"},
        {key:"medium",label:"–°—Ä–µ–¥–Ω–∏–π (3‚Äì5 —à–∞–≥–æ–≤)"},
        {key:"maximum",label:"–ú–∞–∫—Å–∏–º—É–º (5+ —à–∞–≥–æ–≤)"},
        {key:"dont_know",label:"–ù–µ –∑–Ω–∞—é"}
      ]}
      value={a.routine_steps} onChange={(v)=>set({routine_steps:v})}/>
  )},
  { type:"q", id:"budget", render:(a,set)=>(
    <Single label="–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –¥–ª—è —É—Ö–æ–¥–∞ –∫–æ–º—Ñ–æ—Ä—Ç–µ–Ω?"
      options={[
        {key:"light",label:"Light (–±–∞–∑–æ–≤—ã–π)"},
        {key:"affordable",label:"Affordable (—Å—Ä–µ–¥–Ω–∏–π)"},
        {key:"high_end",label:"High End (–ø—Ä–µ–º–∏—É–º)"},
        {key:"elite",label:"Elite (–ª—é–∫—Å, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)"}
      ]}
      value={a.budget} onChange={(v)=>set({budget:v})}/>
  )},

  // –§–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç
  { type:"insight", id:"final_insight", render:(a)=>(
    <Block title="–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≥–æ—Ç–æ–≤!">
      <div className="text-zinc-700 space-y-2">
        <p><strong>–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</strong> {a.skin_concerns.length > 0 ? a.skin_concerns.join(", ") : "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"}</p>
        <p><strong>–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {a.sensitivity_level || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"}</p>
        <p><strong>–ë—é–¥–∂–µ—Ç:</strong> {a.budget || "–Ω–µ —É–∫–∞–∑–∞–Ω"}</p>
        <p><strong>–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:</strong> {a.routine_steps || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"} —à–∞–≥–æ–≤ –≤ —É—Ö–æ–¥–µ</p>
        {a.pregnancy_status !== "none" && <p className="text-amber-600"><strong>–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è:</strong> {a.pregnancy_status}</p>}
      </div>
      <div className="mt-4 text-sm text-zinc-500">–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –∫–æ–∂–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏–ª–∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–ª–∞–Ω—É —É—Ö–æ–¥–∞.</div>
    </Block>
  )},

  // –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
  { type:"q", id:"photo", render:(a,set)=>(
      <PhotoStep a={a} set={set} />
  )},
  { type:"done" },
];

/* ----------- –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ----------- */
export default function Quiz() {
  const navigate = useNavigate();
  const [ans, setAns] = useState<Answers>(load());
  const [idx, setIdx] = useState(0);

  useEffect(()=> save(ans), [ans]);

  const step = steps[idx];
  const total = steps.length;

  const go = (d:number) => setIdx(i => Math.min(total-1, Math.max(0, i + d)));

  const setter = (patch: Partial<Answers>) => setAns(a => ({ ...a, ...patch }));

  return (
    <div className="max-w-3xl mx-auto">
      <div className="mb-3 text-sm text-zinc-600">–®–∞–≥ {idx+1}/{total}</div>
      <div className="w-full h-2 bg-white/70 rounded-full overflow-hidden mb-5">
        <div className="h-2 bg-gradient-to-r from-indigo-500 via-violet-500 to-fuchsia-500" style={{width:`${Math.round(((idx+1)/total)*100)}%`}}/>
      </div>

      {step.type==="q" && step.render(ans, setter)}
      {step.type==="insight" && step.render(ans)}
      {step.type==="done" && (
        <Block title="–ì–æ—Ç–æ–≤–æ">
          <p className="text-zinc-700">–ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞. –ù–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ —è —Å–æ–±–µ—Ä—É –ø–ª–∞–Ω –Ω–∞ 28 –¥–Ω–µ–π, –±—é–¥–∂–µ—Ç –∏ –ø—Ä–æ–¥—É–∫—Ç—ã ‚Äî –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç–∫—Ä–∞–Ω–µ.</p>
        </Block>
      )}

      <div className="mt-6 flex justify-between">
        <button disabled={idx===0} onClick={()=>go(-1)} className="px-5 py-3 rounded-full border disabled:opacity-50">–ù–∞–∑–∞–¥</button>
        {idx<total-1 ? (
          <button onClick={()=>go(+1)} className="px-5 py-3 rounded-full text-white bg-black">–î–∞–ª–µ–µ</button>
        ) : (
          <button onClick={() => navigate("/plan")} className="px-5 py-3 rounded-full text-white bg-black hover:bg-stone-800 transition">–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω</button>
        )}
      </div>
    </div>
  );
}
