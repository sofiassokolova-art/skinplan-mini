/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BotHelp API
 */

import { botHelpAPI } from './bothelp';

// –ü—Ä–∏–º–µ—Ä 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export async function testBotConnection() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É...');
  
  const isConnected = await botHelpAPI.testConnection();
  
  if (isConnected) {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await botHelpAPI.getBotInfo();
    console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:', botInfo);
    
    return true;
  } else {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É');
    return false;
  }
}

// –ü—Ä–∏–º–µ—Ä 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
export async function sendWelcomeMessage(chatId: string, userName?: string) {
  const message = userName 
    ? `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SkinPlan!`
    : '–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SkinPlan!';
  
  const success = await botHelpAPI.sendMessage(chatId, message, {
    keyboard: {
      type: 'inline',
      buttons: [
        [
          { text: 'üì∏ –ê–Ω–∞–ª–∏–∑ –∫–æ–∂–∏', callback_data: 'skin_analysis' },
          { text: 'üìã –ü–ª–∞–Ω —É—Ö–æ–¥–∞', callback_data: 'care_plan' }
        ],
        [
          { text: 'üõí –ö–∞—Ç–∞–ª–æ–≥', callback_data: 'catalog' },
          { text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'support' }
        ]
      ]
    }
  });
  
  if (success) {
    console.log(`‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);
  } else {
    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç ${chatId}`);
  }
  
  return success;
}

// –ü—Ä–∏–º–µ—Ä 3: –†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function saveUserSkinData(userId: string, skinData: {
  skinType: string;
  concerns: string[];
  age: number;
  routine: string;
}) {
  const success = await botHelpAPI.setUserVariables(userId, {
    skin_type: skinData.skinType,
    skin_concerns: skinData.concerns.join(','),
    age: skinData.age,
    current_routine: skinData.routine,
    last_analysis_date: new Date().toISOString(),
  });
  
  if (success) {
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –æ –∫–æ–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  } else {
    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  }
  
  return success;
}

// –ü—Ä–∏–º–µ—Ä 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function getUserSkinProfile(userId: string) {
  const variables = await botHelpAPI.getUserVariables(userId);
  
  if (variables) {
    const skinProfile = {
      skinType: variables.skin_type,
      concerns: variables.skin_concerns ? variables.skin_concerns.split(',') : [],
      age: variables.age,
      routine: variables.current_routine,
      lastAnalysis: variables.last_analysis_date,
    };
    
    console.log(`üìä –ü—Ä–æ—Ñ–∏–ª—å –∫–æ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, skinProfile);
    return skinProfile;
  } else {
    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    return null;
  }
}

// –ü—Ä–∏–º–µ—Ä 5: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —É—Ö–æ–¥–∞
export async function sendPersonalizedPlan(chatId: string, userId: string) {
  const skinProfile = await getUserSkinProfile(userId);
  
  if (!skinProfile) {
    await botHelpAPI.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –∫–æ–∂–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω!');
    return false;
  }
  
  const planMessage = `
üéØ **–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω —É—Ö–æ–¥–∞:**

**–¢–∏–ø –∫–æ–∂–∏:** ${skinProfile.skinType}
**–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:** ${skinProfile.concerns.join(', ')}
**–í–æ–∑—Ä–∞—Å—Ç:** ${skinProfile.age} –ª–µ—Ç

**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —É—Ö–æ–¥:**
üåÖ **–£—Ç—Ä–æ–º:**
‚Ä¢ –û—á–∏—â–µ–Ω–∏–µ –º—è–≥–∫–∏–º –≥–µ–ª–µ–º
‚Ä¢ –¢–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –£–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º —Å SPF

üåô **–í–µ—á–µ—Ä–æ–º:**
‚Ä¢ –î–µ–º–∞–∫–∏—è–∂
‚Ä¢ –û—á–∏—â–µ–Ω–∏–µ
‚Ä¢ –°—ã–≤–æ—Ä–æ—Ç–∫–∞ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
‚Ä¢ –ù–æ—á–Ω–æ–π –∫—Ä–µ–º

–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º?
  `;
  
  const success = await botHelpAPI.sendMessage(chatId, planMessage, {
    keyboard: {
      type: 'inline',
      buttons: [
        [
          { text: 'üõí –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', callback_data: 'recommended_products' },
          { text: 'üìã –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω', callback_data: 'detailed_plan' }
        ],
        [
          { text: 'üîÑ –ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑', callback_data: 'new_analysis' }
        ]
      ]
    }
  });
  
  return success;
}

// –ü—Ä–∏–º–µ—Ä 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤)
export async function handleIncomingMessage(message: any) {
  const { chat_id, text, user_id } = message;
  
  console.log(`üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${user_id}: ${text}`);
  
  // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
  switch (text.toLowerCase()) {
    case '/start':
      await sendWelcomeMessage(chat_id);
      break;
      
    case '/profile':
      await getUserSkinProfile(user_id);
      break;
      
    case '/plan':
      await sendPersonalizedPlan(chat_id, user_id);
      break;
      
    case '/help':
      await botHelpAPI.sendMessage(chat_id, `
ü§ñ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–∂–∏
/plan - –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω —É—Ö–æ–¥–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!
      `);
      break;
      
    default:
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      await botHelpAPI.sendMessage(chat_id, '–Ø –ø–æ–Ω–∏–º–∞—é! –î–∞–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω —É—Ö–æ–¥–∞ –¥–ª—è –≤–∞—à–µ–π –∫–æ–∂–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.');
  }
}

// –ü—Ä–∏–º–µ—Ä 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–Ω–∞–ª–∏–∑–æ–º –∫–æ–∂–∏
export async function processSkinAnalysis(chatId: string, userId: string, analysisData: any) {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
  await botHelpAPI.setUserVariables(userId, {
    last_analysis: JSON.stringify(analysisData),
    analysis_date: new Date().toISOString(),
  });
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const resultsMessage = `
üî¨ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–∂–∏:**

**–¢–∏–ø –∫–æ–∂–∏:** ${analysisData.skinType}
**–£—Ä–æ–≤–µ–Ω—å —É–≤–ª–∞–∂–Ω–µ–Ω–Ω–æ—Å—Ç–∏:** ${analysisData.hydration}%
**–ü–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—è:** ${analysisData.pigmentation}
**–ú–æ—Ä—â–∏–Ω—ã:** ${analysisData.wrinkles}
**–ü–æ—Ä—ã:** ${analysisData.pores}

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
${analysisData.recommendations.map((rec: string) => `‚Ä¢ ${rec}`).join('\n')}

–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω —É—Ö–æ–¥–∞?
  `;
  
  await botHelpAPI.sendMessage(chatId, resultsMessage, {
    keyboard: {
      type: 'inline',
      buttons: [
        [
          { text: 'üìã –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω —É—Ö–æ–¥–∞', callback_data: 'get_plan' },
          { text: 'üõí –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', callback_data: 'products' }
        ]
      ]
    }
  });
}


